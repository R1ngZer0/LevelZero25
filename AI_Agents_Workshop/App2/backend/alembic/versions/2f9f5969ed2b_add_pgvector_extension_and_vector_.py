"""Add pgvector extension and vector_embeddings table

Revision ID: 2f9f5969ed2b
Revises: 4c706516e94b
Create Date: 2025-04-15 15:29:57.633188

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import pgvector.sqlalchemy


# revision identifiers, used by Alembic.
revision: str = '2f9f5969ed2b'
down_revision: Union[str, None] = '4c706516e94b'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # Add command to create extension
    op.execute("CREATE EXTENSION IF NOT EXISTS vector;")
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('vector_embeddings',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('file_id', sa.Integer(), nullable=False),
    sa.Column('embedding', pgvector.sqlalchemy.vector.VECTOR(dim=1536), nullable=False),
    sa.Column('embedding_model', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['file_id'], ['files.id'], name=op.f('fk_vector_embeddings_file_id_files'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_vector_embeddings'))
    )
    op.create_index(op.f('ix_vector_embeddings_file_id'), 'vector_embeddings', ['file_id'], unique=False)
    op.create_index(op.f('ix_vector_embeddings_id'), 'vector_embeddings', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_vector_embeddings_id'), table_name='vector_embeddings')
    op.drop_index(op.f('ix_vector_embeddings_file_id'), table_name='vector_embeddings')
    op.drop_table('vector_embeddings')
    # Add command to drop extension
    op.execute("DROP EXTENSION IF EXISTS vector;")
    # ### end Alembic commands ###
